<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<testCase id="9">
  <summary/>
  <steps>
    <apiCall apiId="com.provar.plugins.forcedotcom.core.testapis.ApexConnect" name="ApexConnect" testItemId="1" title="Salesforce Connect: Admin (Test)">
      <arguments>
        <argument id="connectionName">
          <value class="value" valueClass="string">Admin</value>
        </argument>
        <argument id="resultName">
          <value class="value" valueClass="string">Admin</value>
        </argument>
        <argument id="resultScope">
          <value class="value" valueClass="string">Test</value>
        </argument>
        <argument id="uiApplicationName">
          <value class="value" valueClass="string">LightningSales</value>
        </argument>
        <argument id="quickUiLogin">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="closeAllPrimaryTabs">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="reuseConnectionName"/>
        <argument id="alreadyOpenBehaviour">
          <value class="value" valueClass="string">Fail</value>
        </argument>
        <argument id="privateBrowsingMode"/>
        <argument id="enableObjectIdLogging">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="autoCleanup"/>
        <argument id="cleanupConnectionName"/>
        <argument id="logFileLocation"/>
        <argument id="username"/>
        <argument id="password"/>
        <argument id="securityToken"/>
        <argument id="environment"/>
        <argument id="lightningMode">
          <value class="value" valueClass="string">default</value>
        </argument>
        <argument id="webBrowser"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="12" title="Set Values: userName">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">userName</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">provartesting@provar.com</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="2" title="Assert: 100 EqualTo 100">
      <arguments>
        <argument id="expectedValue">
          <value class="value" valueClass="string">100</value>
        </argument>
        <argument id="actualValue">
          <value class="value" valueClass="string">100</value>
        </argument>
        <argument id="comparisonType">
          <value class="value" valueClass="string">EqualTo</value>
        </argument>
        <argument id="caseSensitive">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="numeric">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="retainDecimals">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="nullGreater">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchMultiLine">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="matchDotAll">
          <value class="value" valueClass="boolean">false</value>
        </argument>
        <argument id="failureMessage"/>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Fail" name="Fail" testItemId="3" title="Fail Test: There was an expected Exception Failing now.">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="message">
          <value class="value" valueClass="string">There was an expected Exception Failing now.</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Finally" name="Finally" testItemId="4" title="Finally: ">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="description"/>
      </arguments>
      <clauses>
        <clause name="hidden" testItemId="5">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="6" title="Assert: 100 EqualTo 100">
              <arguments>
                <argument id="expectedValue">
                  <value class="value" valueClass="string">100</value>
                </argument>
                <argument id="actualValue">
                  <value class="value" valueClass="string">100</value>
                </argument>
                <argument id="comparisonType">
                  <value class="value" valueClass="string">EqualTo</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="boolean">true</value>
                </argument>
                <argument id="numeric">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="retainDecimals">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="nullGreater">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchMultiLine">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="matchDotAll">
                  <value class="value" valueClass="boolean">false</value>
                </argument>
                <argument id="failureMessage"/>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.ForEach" name="ForEach" testItemId="7" title="For Each: =&gt;">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="list"/>
        <argument id="fromItem">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="valueName"/>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="8"/>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.If" name="If" testItemId="9" title="If: {userName = &quot;provartesting@provar.com&quot;}">
      <arguments>
        <argument id="condition">
          <value class="eq">
            <lhs class="variable">
              <path element="userName"/>
            </lhs>
            <rhs class="value" valueClass="string">provartesting@provar.com</rhs>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="then" testItemId="10">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="13" title="Set Values: result">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">result</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">pass</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
        <clause name="else" testItemId="11">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="14" title="Set Values: result">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">result</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">failed</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.Sleep" name="Sleep" testItemId="15" title="Sleep for {10} seconds">
      <tags>
        <string>disabled</string>
      </tags>
      <arguments>
        <argument id="sleepSecs">
          <value class="value" valueClass="decimal">10</value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="20" title="Set Values: ch">
      <arguments>
        <argument id="values">
          <value class="valueList" mutable="Mutable">
            <namedValues mutable="Mutable">
              <namedValue name="valuePath">
                <value class="value" valueClass="string">ch</value>
              </namedValue>
              <namedValue name="value">
                <value class="value" valueClass="string">1</value>
              </namedValue>
              <namedValue name="valueScope">
                <value class="value" valueClass="string">Test</value>
              </namedValue>
            </namedValues>
          </value>
        </argument>
      </arguments>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.Switch" name="Switch" testItemId="16" title="Switch: {ch}">
      <arguments>
        <argument id="value">
          <value class="variable">
            <path element="ch"/>
          </value>
        </argument>
      </arguments>
      <clauses>
        <clause name="case" testItemId="17">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.SwitchCase" name="SwitchCase" testItemId="18" title="Case: 1">
              <arguments>
                <argument id="value">
                  <value class="value" valueClass="string">1</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="string">No</value>
                </argument>
                <argument id="alreadyMatched"/>
                <argument id="switchValue"/>
              </arguments>
              <clauses>
                <clause name="steps" testItemId="19">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="21" title="Assert: 101 EqualTo 101">
                      <arguments>
                        <argument id="expectedValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="actualValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="comparisonType">
                          <value class="value" valueClass="string">EqualTo</value>
                        </argument>
                        <argument id="caseSensitive">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="numeric">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="retainDecimals">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="nullGreater">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchMultiLine">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchDotAll">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="failureMessage"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.Break" name="Break" testItemId="22" title="Break"/>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
        <clause name="case" testItemId="23">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.SwitchCase" name="SwitchCase" testItemId="24" title="Case: 2">
              <arguments>
                <argument id="value">
                  <value class="value" valueClass="string">2</value>
                </argument>
                <argument id="caseSensitive">
                  <value class="value" valueClass="string">No</value>
                </argument>
                <argument id="alreadyMatched"/>
                <argument id="switchValue"/>
              </arguments>
              <clauses>
                <clause name="steps" testItemId="25">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="29" title="Assert: 101 EqualTo 101">
                      <arguments>
                        <argument id="expectedValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="actualValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="comparisonType">
                          <value class="value" valueClass="string">EqualTo</value>
                        </argument>
                        <argument id="caseSensitive">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="numeric">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="retainDecimals">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="nullGreater">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchMultiLine">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchDotAll">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="failureMessage"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.Break" name="Break" testItemId="30" title="Break"/>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
        <clause name="default" testItemId="26">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.SwitchDefault" name="SwitchDefault" testItemId="27" title="Default">
              <clauses>
                <clause name="steps" testItemId="28">
                  <steps>
                    <apiCall apiId="com.provar.plugins.bundled.apis.AssertValues" name="AssertValues" testItemId="31" title="Assert: 101 EqualTo 101">
                      <arguments>
                        <argument id="expectedValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="actualValue">
                          <value class="value" valueClass="string">101</value>
                        </argument>
                        <argument id="comparisonType">
                          <value class="value" valueClass="string">EqualTo</value>
                        </argument>
                        <argument id="caseSensitive">
                          <value class="value" valueClass="boolean">true</value>
                        </argument>
                        <argument id="numeric">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="retainDecimals">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="nullGreater">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchMultiLine">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="matchDotAll">
                          <value class="value" valueClass="boolean">false</value>
                        </argument>
                        <argument id="failureMessage"/>
                      </arguments>
                    </apiCall>
                    <apiCall apiId="com.provar.plugins.bundled.apis.control.Break" name="Break" testItemId="32" title="Break"/>
                  </steps>
                </clause>
              </clauses>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
    <apiCall apiId="com.provar.plugins.bundled.apis.control.DoWhile" name="DoWhile" testItemId="33" title="While: {true}">
      <arguments>
        <argument id="condition">
          <value class="value" valueClass="boolean">true</value>
        </argument>
        <argument id="counterName">
          <value class="value" valueClass="string">LoopCounter</value>
        </argument>
        <argument id="counterStart">
          <value class="value" valueClass="decimal">1</value>
        </argument>
        <argument id="counterEnd">
          <value class="value" valueClass="decimal">10</value>
        </argument>
        <argument id="continueOnFailure"/>
      </arguments>
      <clauses>
        <clause name="substeps" testItemId="34">
          <steps>
            <apiCall apiId="com.provar.plugins.bundled.apis.control.SetValues" name="SetValues" testItemId="35" title="Set Values: color">
              <arguments>
                <argument id="values">
                  <value class="valueList" mutable="Mutable">
                    <namedValues mutable="Mutable">
                      <namedValue name="valuePath">
                        <value class="value" valueClass="string">color</value>
                      </namedValue>
                      <namedValue name="value">
                        <value class="value" valueClass="string">red</value>
                      </namedValue>
                      <namedValue name="valueScope">
                        <value class="value" valueClass="string">Test</value>
                      </namedValue>
                    </namedValues>
                  </value>
                </argument>
              </arguments>
            </apiCall>
          </steps>
        </clause>
      </clauses>
    </apiCall>
  </steps>
</testCase>
